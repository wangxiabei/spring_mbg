<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aranya.mall.tiny.mbg.mapper.TakeoutFoodTastesMapper">
  <resultMap id="BaseResultMap" type="com.aranya.mall.tiny.mbg.model.TakeoutFoodTastes">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="food_id" jdbcType="INTEGER" property="foodId" />
    <result column="restaurant_id" jdbcType="INTEGER" property="restaurantId" />
    <result column="price" jdbcType="NUMERIC" property="price" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="taste_group_id" jdbcType="INTEGER" property="tasteGroupId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, food_id, restaurant_id, price, remark, deleted_at, created_at, updated_at, 
    taste_group_id
  </sql>
  <select id="selectByExample" parameterType="com.aranya.mall.tiny.mbg.model.TakeoutFoodTastesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from takeout_food_tastes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from takeout_food_tastes
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from takeout_food_tastes
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.aranya.mall.tiny.mbg.model.TakeoutFoodTastesExample">
    delete from takeout_food_tastes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aranya.mall.tiny.mbg.model.TakeoutFoodTastes">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into takeout_food_tastes (name, food_id, restaurant_id, 
      price, remark, deleted_at, 
      created_at, updated_at, taste_group_id
      )
    values (#{name,jdbcType=VARCHAR}, #{foodId,jdbcType=INTEGER}, #{restaurantId,jdbcType=INTEGER}, 
      #{price,jdbcType=NUMERIC}, #{remark,jdbcType=VARCHAR}, #{deletedAt,jdbcType=TIMESTAMP}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{tasteGroupId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aranya.mall.tiny.mbg.model.TakeoutFoodTastes">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into takeout_food_tastes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="foodId != null">
        food_id,
      </if>
      <if test="restaurantId != null">
        restaurant_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="tasteGroupId != null">
        taste_group_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="foodId != null">
        #{foodId,jdbcType=INTEGER},
      </if>
      <if test="restaurantId != null">
        #{restaurantId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=NUMERIC},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="tasteGroupId != null">
        #{tasteGroupId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aranya.mall.tiny.mbg.model.TakeoutFoodTastesExample" resultType="java.lang.Long">
    select count(*) from takeout_food_tastes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update takeout_food_tastes
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.foodId != null">
        food_id = #{record.foodId,jdbcType=INTEGER},
      </if>
      <if test="record.restaurantId != null">
        restaurant_id = #{record.restaurantId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=NUMERIC},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.deletedAt != null">
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tasteGroupId != null">
        taste_group_id = #{record.tasteGroupId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update takeout_food_tastes
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      food_id = #{record.foodId,jdbcType=INTEGER},
      restaurant_id = #{record.restaurantId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=NUMERIC},
      remark = #{record.remark,jdbcType=VARCHAR},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      taste_group_id = #{record.tasteGroupId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aranya.mall.tiny.mbg.model.TakeoutFoodTastes">
    update takeout_food_tastes
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="foodId != null">
        food_id = #{foodId,jdbcType=INTEGER},
      </if>
      <if test="restaurantId != null">
        restaurant_id = #{restaurantId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=NUMERIC},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="tasteGroupId != null">
        taste_group_id = #{tasteGroupId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aranya.mall.tiny.mbg.model.TakeoutFoodTastes">
    update takeout_food_tastes
    set name = #{name,jdbcType=VARCHAR},
      food_id = #{foodId,jdbcType=INTEGER},
      restaurant_id = #{restaurantId,jdbcType=INTEGER},
      price = #{price,jdbcType=NUMERIC},
      remark = #{remark,jdbcType=VARCHAR},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      taste_group_id = #{tasteGroupId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>