<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aranya.mall.tiny.mbg.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.aranya.mall.tiny.mbg.model.Users">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="wechat_avatar" jdbcType="VARCHAR" property="wechatAvatar" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="typee" jdbcType="INTEGER" property="typee" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="token_expire_time" jdbcType="TIMESTAMP" property="tokenExpireTime" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="unionid" jdbcType="VARCHAR" property="unionid" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="user_source" jdbcType="VARCHAR" property="userSource" />
    <result column="minsu_wx_lite_openid" jdbcType="VARCHAR" property="minsuWxLiteOpenid" />
    <result column="minsu_wx_openid" jdbcType="VARCHAR" property="minsuWxOpenid" />
    <result column="is_landlord" jdbcType="INTEGER" property="isLandlord" />
    <result column="project_source" jdbcType="VARCHAR" property="projectSource" />
    <result column="is_freeze" jdbcType="INTEGER" property="isFreeze" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nickname, name, password, salt, phone, email, avatar, wechat_avatar, address, 
    id_number, status, typee, token, token_expire_time, openid, unionid, deleted_at, 
    created_at, updated_at, desc, user_source, minsu_wx_lite_openid, minsu_wx_openid, 
    is_landlord, project_source, is_freeze
  </sql>
  <select id="selectByExample" parameterType="com.aranya.mall.tiny.mbg.model.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aranya.mall.tiny.mbg.model.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aranya.mall.tiny.mbg.model.Users">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users (nickname, name, password, 
      salt, phone, email, 
      avatar, wechat_avatar, address, 
      id_number, status, typee, 
      token, token_expire_time, openid, 
      unionid, deleted_at, created_at, 
      updated_at, desc, user_source, 
      minsu_wx_lite_openid, minsu_wx_openid, is_landlord, 
      project_source, is_freeze)
    values (#{nickname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{wechatAvatar,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{idNumber,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{typee,jdbcType=INTEGER}, 
      #{token,jdbcType=VARCHAR}, #{tokenExpireTime,jdbcType=TIMESTAMP}, #{openid,jdbcType=VARCHAR}, 
      #{unionid,jdbcType=VARCHAR}, #{deletedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{desc,jdbcType=VARCHAR}, #{userSource,jdbcType=VARCHAR}, 
      #{minsuWxLiteOpenid,jdbcType=VARCHAR}, #{minsuWxOpenid,jdbcType=VARCHAR}, #{isLandlord,jdbcType=INTEGER}, 
      #{projectSource,jdbcType=VARCHAR}, #{isFreeze,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aranya.mall.tiny.mbg.model.Users">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        nickname,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="wechatAvatar != null">
        wechat_avatar,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="typee != null">
        typee,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="tokenExpireTime != null">
        token_expire_time,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="unionid != null">
        unionid,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="userSource != null">
        user_source,
      </if>
      <if test="minsuWxLiteOpenid != null">
        minsu_wx_lite_openid,
      </if>
      <if test="minsuWxOpenid != null">
        minsu_wx_openid,
      </if>
      <if test="isLandlord != null">
        is_landlord,
      </if>
      <if test="projectSource != null">
        project_source,
      </if>
      <if test="isFreeze != null">
        is_freeze,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="wechatAvatar != null">
        #{wechatAvatar,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="typee != null">
        #{typee,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="tokenExpireTime != null">
        #{tokenExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="userSource != null">
        #{userSource,jdbcType=VARCHAR},
      </if>
      <if test="minsuWxLiteOpenid != null">
        #{minsuWxLiteOpenid,jdbcType=VARCHAR},
      </if>
      <if test="minsuWxOpenid != null">
        #{minsuWxOpenid,jdbcType=VARCHAR},
      </if>
      <if test="isLandlord != null">
        #{isLandlord,jdbcType=INTEGER},
      </if>
      <if test="projectSource != null">
        #{projectSource,jdbcType=VARCHAR},
      </if>
      <if test="isFreeze != null">
        #{isFreeze,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aranya.mall.tiny.mbg.model.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.wechatAvatar != null">
        wechat_avatar = #{record.wechatAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.idNumber != null">
        id_number = #{record.idNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.typee != null">
        typee = #{record.typee,jdbcType=INTEGER},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.tokenExpireTime != null">
        token_expire_time = #{record.tokenExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.unionid != null">
        unionid = #{record.unionid,jdbcType=VARCHAR},
      </if>
      <if test="record.deletedAt != null">
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.desc != null">
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.userSource != null">
        user_source = #{record.userSource,jdbcType=VARCHAR},
      </if>
      <if test="record.minsuWxLiteOpenid != null">
        minsu_wx_lite_openid = #{record.minsuWxLiteOpenid,jdbcType=VARCHAR},
      </if>
      <if test="record.minsuWxOpenid != null">
        minsu_wx_openid = #{record.minsuWxOpenid,jdbcType=VARCHAR},
      </if>
      <if test="record.isLandlord != null">
        is_landlord = #{record.isLandlord,jdbcType=INTEGER},
      </if>
      <if test="record.projectSource != null">
        project_source = #{record.projectSource,jdbcType=VARCHAR},
      </if>
      <if test="record.isFreeze != null">
        is_freeze = #{record.isFreeze,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set id = #{record.id,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      wechat_avatar = #{record.wechatAvatar,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      id_number = #{record.idNumber,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      typee = #{record.typee,jdbcType=INTEGER},
      token = #{record.token,jdbcType=VARCHAR},
      token_expire_time = #{record.tokenExpireTime,jdbcType=TIMESTAMP},
      openid = #{record.openid,jdbcType=VARCHAR},
      unionid = #{record.unionid,jdbcType=VARCHAR},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      desc = #{record.desc,jdbcType=VARCHAR},
      user_source = #{record.userSource,jdbcType=VARCHAR},
      minsu_wx_lite_openid = #{record.minsuWxLiteOpenid,jdbcType=VARCHAR},
      minsu_wx_openid = #{record.minsuWxOpenid,jdbcType=VARCHAR},
      is_landlord = #{record.isLandlord,jdbcType=INTEGER},
      project_source = #{record.projectSource,jdbcType=VARCHAR},
      is_freeze = #{record.isFreeze,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aranya.mall.tiny.mbg.model.Users">
    update users
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="wechatAvatar != null">
        wechat_avatar = #{wechatAvatar,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="typee != null">
        typee = #{typee,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="tokenExpireTime != null">
        token_expire_time = #{tokenExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="userSource != null">
        user_source = #{userSource,jdbcType=VARCHAR},
      </if>
      <if test="minsuWxLiteOpenid != null">
        minsu_wx_lite_openid = #{minsuWxLiteOpenid,jdbcType=VARCHAR},
      </if>
      <if test="minsuWxOpenid != null">
        minsu_wx_openid = #{minsuWxOpenid,jdbcType=VARCHAR},
      </if>
      <if test="isLandlord != null">
        is_landlord = #{isLandlord,jdbcType=INTEGER},
      </if>
      <if test="projectSource != null">
        project_source = #{projectSource,jdbcType=VARCHAR},
      </if>
      <if test="isFreeze != null">
        is_freeze = #{isFreeze,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aranya.mall.tiny.mbg.model.Users">
    update users
    set nickname = #{nickname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      wechat_avatar = #{wechatAvatar,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      typee = #{typee,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      token_expire_time = #{tokenExpireTime,jdbcType=TIMESTAMP},
      openid = #{openid,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      desc = #{desc,jdbcType=VARCHAR},
      user_source = #{userSource,jdbcType=VARCHAR},
      minsu_wx_lite_openid = #{minsuWxLiteOpenid,jdbcType=VARCHAR},
      minsu_wx_openid = #{minsuWxOpenid,jdbcType=VARCHAR},
      is_landlord = #{isLandlord,jdbcType=INTEGER},
      project_source = #{projectSource,jdbcType=VARCHAR},
      is_freeze = #{isFreeze,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>